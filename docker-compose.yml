version: '3.8'

services:
  mysql:
    image: mysql:8.0.33
    container_name: mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=booking
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306  
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - springboot-mysql-network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      retries: 10
      interval: 3s
      timeout: 30s

  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    networks:
      - springboot-rabbitmq-network
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    
  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    container_name: app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/booking?allowPublicKeyRetrieval=true&autoReconnect=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    networks:
      - springboot-mysql-network
      - springboot-rabbitmq-network
    depends_on:
      - mysql
      - rabbitmq
    ports:
      - 8090:8090


  email:
    build:
      context: .
      dockerfile: ./email/Dockerfile
    container_name: email
    networks:
      - springboot-rabbitmq-network
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq


volumes:
  mysql-data:
  rabbitmq_data:
networks:
  springboot-mysql-network:
    name: springboot-mysql-network
  springboot-rabbitmq-network:
    name: springboot-rabbitmq-network